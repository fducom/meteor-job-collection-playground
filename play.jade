//-###########################################################################
//-  Copyright (C) 2015 by Vaughn Iverson
//-  meteor-job-collection-playground is free software released under the MIT/X11 license.
//-  See included LICENSE file for details.
//-###########################################################################

head
  title meteor-job-collection-playground

body

template(name="master")
  div.ui.container
     +top
     +yield "jobContent"
     +yield "workerContent"

template(name="top")
  div.ui.segment
    h2.ui.header job-collection Playground App
    unless currentUser
      div.ui.info.message
        p
          | You are currently in the public playground, create
          | an account and sign in to have a private space.
    div.loginTemp
      +loginButtons align="right"

template(name="workerPanel")
  div.ui.segment
    h4.ui.header Local worker
    if status
      p Status: 
        div.ui.small.teal.label #{status}% complete
      p Job: #{id}
      button.negative.ui.button Fail this job
    else
      p Status:
        div.ui.small.grey.label Idle

template(name="newJobInput")
  div.ui.raised.segment
    h4.ui.header Create a new repeating job
      | using Later.js
      a(target="_blank" href="https://bunkat.github.io/later/parsers.html#text")
        | text parser input,
      | or a
      a(target="_blank" href="http://en.wikipedia.org/wiki/Cron#CRON_expression")
        | CRON expression
      |:
    p
    form.ui.form
      div.field
        label When should it run? 
          span.text-muted (all times are UTC):
        div.ui.fluid.input
          input(id="inputLater" placeholder="e.g. 'every 5 minutes' or '*/5 * * * *'")
          if inputReady
            button#newJob.ui.green.right.labeled.icon.button
              i.wait.icon
              | Create new job
          else
            button.ui.right.icon.button
              i.remove.circle.icon
    p
    if inputReady
      table.ui.celled.table
        thead
          tr
            th
              | Next 3 runtimes:
        tbody
          each nextTimes
            tr
              td
                | #{.}

template(name="jobControls")
  div.ui.raised.segment
    h4.ui.header Collection Controls
    button.ui.green.labeled.icon.button.clear-completed
      i.checkmark.icon
      | Clear Completed
    button.ui.labeled.icon.button.pause-queue
      i.pause.icon
      | Pause all
    button.ui.teal.labeled.icon.button.restart-queue
      i.repeat.icon
      | Restart all
    button.ui.yellow.labeled.icon.button.cancel-queue
      i.ban.icon
      | Cancel all
    button.ui.red.labeled.icon.button.remove-queue
      i.remove.icon
      | Remove all

template(name="jobTable")
  div.ui.segment
    +newJobInput
    +jobControls
    div.ui.raised.segment
      h4.ui.header Job Collection
      span.text-muted.small
        u Fine print:
        | Jobs only run when a client is connected. This is because all "work" in this demo is
        | performed in the client code. If you close or reload your browser page while a job is
        | running (and your client was the one working on the job) then that job will not complete,
        | and after a few minutes a "reaper" job on the server will notice and "auto-fail" the
        | job so it can be retried later. Completed and cancelled jobs are also automatically removed
        | by a "cleanup" job on the server after a short period of time. If you are not signed in,
        | then the job collection you see below is being shared with other public users and will
        | update "live" with their actions. In this demo when you create a new repeating job, all
        | preexisting running or waiting jobs of that type are automatically cancelled by the server.
      p
      table.ui.celled.striped.table
        thead
          tr
            th Type
            th Id
            th Run
            th Updated
            th Attempts
            th Repeats
            th Status
            th Actions
        tbody
          each jobEntries
            +jobEntry
          else
            tr
              td(colspan="20" align="center")
                span.text-info No jobs in collection...

template(name="jobEntry")
  tr
    with doc
      td #{type}
      td #{jobId}
      td(class="#{futurePast}") #{runAt}
      td #{lastUpdated}
      td #{retried} / #{numRetries}
      td #{repeated} / #{numRepeats}
      td
        if running
          div.progress
            div(class="progress-bar progress-bar-info"
                role="progressbar"
                min-width="60px"
                aria-valuenow="#{progress.percent}"
                aria-valuemin="0"
                aria-valuemax="100"
                style="width: {{progress.percent}}%;")
              span(class="text-primary text-center") #{progress.percent}%
        else
          span(class="label label-#{statusBG}") #{status}
      td.button-column
        if pausable
          button(type="button"
                 class="btn pause-job btn-default btn-xs"
                 aria-hidden="true"
                 data-toggle="tooltip"
                 data-placement="bottom"
                 title="Pause Job")
            span(class="glyphicon glyphicon-pause")
        if resumable
          button(type="button"
                 class="btn resume-job btn-default btn-xs"
                 aria-hidden="true"
                 data-toggle="tooltip"
                 data-placement="bottom"
                 title="Resume Job")
            span(class="glyphicon glyphicon-play")
        if restartable
          button(type="button"
                 class="btn restart-job btn-info btn-xs"
                 aria-hidden="true"
                 data-toggle="tooltip"
                 data-placement="bottom"
                 title="Restart Job")
            span(class="glyphicon glyphicon-repeat")
        if rerunable
          button(type="button"
                 class="btn rerun-job btn-info btn-xs"
                 aria-hidden="true"
                 data-toggle="tooltip"
                 data-placement="bottom"
                 title="Rerun Job")
            span(class="glyphicon glyphicon-refresh")
        if cancellable
          button(type="button"
                 class="btn cancel-job btn-warning btn-xs"
                 aria-hidden="true"
                 data-toggle="tooltip"
                 data-placement="bottom"
                 title="Cancel Job")
            span(class="glyphicon glyphicon-ban-circle")
        if removable
          if rerunable
            button(type="button"
                   class="btn remove-job btn-success btn-xs"
                   aria-hidden="true"
                   data-toggle="tooltip"
                   data-placement="bottom"
                   title="Remove Job")
              span(class="glyphicon glyphicon-ok")
          else
            button(type="button"
                   class="btn remove-job btn-danger btn-xs"
                   aria-hidden="true"
                   data-toggle="tooltip"
                   data-placement="bottom"
                   title="Remove Job")
              span(class="glyphicon glyphicon-remove")
